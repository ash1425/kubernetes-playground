apiVersion: v1
kind: Service
metadata:
  name: users-service
  labels:
    app: users
spec:
  selector:
    app: users
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080

---

kind: Service
apiVersion: v1
metadata:
  name: mongo-host
spec:
  type: ExternalName
  externalName: host.docker.internal


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users      
    spec:
      containers:
        - name: users
          image: localhost:5000/users@sha256:50dd517d5a4228931aa3ec1ce8c803b4d97c19c0126dd0915daa65d712d63486
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_HOST
              value: mongo-host
          readinessProbe:
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 5
            initialDelaySeconds: 20
            httpGet:
              port: 8080
              path: /actuator/health
          livenessProbe:
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 5
            initialDelaySeconds: 20
            httpGet:
              port: 8080
              path: /actuator/health      
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1